---
openapi: 3.0.0
servers:
  - description: MCH API for Puskesmas IV Koto
    url: http://mch-api.tanbo.tech/
info:
  description: |
    This API will handle all of functional requirement needed by Puskesmas IV Koto in parts of its Pelayanan Ibu dan Anak
  version: 1.0.0
  title: Maternal and Child Healthcare API
  contact:
    email: mnfaizp@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: authentications
    description: Authentication operations
  - name: admins
    description: Admin operations
  - name: mother care
    description: Mother care operations
  - name: child care
    description: Child care operations
  - name: report
    description: Report operations
paths:
  /api/v1/login:
    post:
      tags:
        - authentications
      summary: Authenticates user
      operationId: authenticates
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthenticatesRequest"
            example:
              email: admin@admin.com
              password: admin
        description: Authenticates user
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticatesResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/v1/placements:
    post:
      tags:
        - admins
      summary: Place midwife to a Jorong
      operationId: placeMidwife
      requestBody:
        $ref: "#/components/requestBodies/PlaceMidwifeRequest"
      responses:
        "201":
          description: "Midwife has been placed to a Jorong"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MidwifePlacement"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/v1/users:
    post:
      tags:
        - admins
      summary: Create a user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/Mother"
                - $ref: "#/components/schemas/Midwife"
      responses:
        "201":
          description: "User has been created"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/User"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    get:
      tags:
        - admins
      summary: Get all users
      operationId: getAllUsers
      parameters:
        - name: role
          in: query
          description: Role of user
          required: false
          schema:
            type: string
            enum: [mother, midwife, chairperson, coordinator]
        - name: name
          in: query
          description: Name of user
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Search user by name
          required: false
          schema:
            type: string
        - name: id
          in: query
          description: ID of user
          required: false
          schema:
            type: integer
            format: int32
        - name: email
          in: query
          description: Email of user
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Page of users
          required: false
          schema:
            type: integer
            format: int32
        - name: perPage
          in: query
          description: Number of users per page
          required: false
          schema:
            type: integer
            format: int32

      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/User"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/v1/ante_natal_cares:
    post:
      tags:
        - mother care
      summary: Create a Ante Natal Care
      operationId: createAnteNatalCare
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/AncFirstContact"
                - $ref: "#/components/schemas/AncSecondContact"
                - $ref: "#/components/schemas/AncThirdContact"
                - $ref: "#/components/schemas/AncFourthContact"
                - $ref: "#/components/schemas/AncFifthContact"
                - $ref: "#/components/schemas/AncSixthContact"
                - $ref: "#/components/schemas/NonContact"
      responses:
        "201":
          description: "Ante Natal Care has been created"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/AnteNatalCare"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/v1/maternals/user:
    post:
      tags:
        - mother care
      summary: Create a Maternal and user simultaneously
      operationId: createMaternalAndUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUserMaternal"
      responses:
        "201":
          description: "Maternal and user has been created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NewUserMaternal"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    AuthenticatesRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    AuthenticatesResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
      required:
        - accessToken
        - refreshToken

    MidwifePlacement:
      type: object
      properties:
        id:
          type: integer
          format: int32
        midwifeId:
          type: integer
          format: int32
        jorongId:
          type: integer
          format: int32
        placementDate:
          type: string
          format: date
      required:
        - midwifeId
        - jorongId

    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        role:
          type: string
          enum: [mother, midwife, chairperson, coordinator]
        email:
          type: string
        password:
          type: string
        name:
          type: string
        dateOfBirth:
          type: string
          format: date
        nik:
          type: string
        phoneNumber:
          type: number
        address:
          type: string
        birthPlace:
          type: string
        jobTitle:
          type: string
        religion:
          type: string
          enum: [islam, kristen, katolik, hindu, budha, konghucu, kepercayaan]
        isActiveBpjs:
          type: boolean
        bpjsKesehatanNumber:
          type: string

    Mother:
      type: object
      properties:
        role:
          type: string
          enum: [mother, relatives]
        email:
          type: string
        name:
          type: string
        nik:
          type: string
        phoneNumber:
          type: number
        address:
          type: string
        dateOfBirth:
          type: string
        jobTitle:
          type: string
        religion:
          type: string
          enum: [islam, kristen, katolik, hindu, budha, konghucu, kepercayaan]
        isActiveBpjs:
          type: boolean
        bpjsKesehatanNumber:
          type: string

    Midwife:
      type: object
      properties:
        role:
          type: string
          enum: [midwife, chairperson, coordinator]
        email:
          type: string
        password:
          type: string
        name:
          type: string

    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        fields:
          type: array
      required:
        - code
        - message

    # create scehma according to AddAnteNatalCare Entity
    AnteNatalCare:
      type: object
      properties:
        maternalId:
          type: string
        placementId:
          type: string
        contactType:
          type: string
          enum: ["c1", "c2", "c3", "c4", "c5", "c6", "c0"]
        weight:
          type: number
        height:
          type: number
        bloodPressure:
          type: number
        action:
          type: string
        ttImmunization:
          type: string
          enum: ["0", "1", "2", "3", "4"]
        hemoglobin:
          type: number
        fundalHeight:
          type: number
        fetalHeartRate:
          type: number
        usgCheckDate:
          type: string
          format: date
        temprature:
          type: number
        bloodType:
          type: string
          enum: ["A", "B", "AB", "O"]
        proteinInUrine:
          type: string
          enum: ["positive", "negative"]
        sugarInUrine:
          type: string
          enum: ["positive", "negative"]
        hbsag:
          type: string
          enum: ["positive", "negative"]
        hiv:
          type: string
          enum: ["positive", "negative"]
        syphilis:
          type: string
          enum: ["positive", "negative"]

    AncFirstContact:
      allOf:
        - $ref: "#/components/schemas/AnteNatalCare"
        - type: object
          required:
            - maternalId
            - contactType
            - weight
            - height
            - bloodPressure
            - hemoglobin
            - fundalHeight
            - fetalHeartRate
            - temprature
            - bloodType
            - hbsag
            - hiv
            - syphilis
    AncSecondContact:
      allOf:
        - $ref: "#/components/schemas/AnteNatalCare"
        - type: object
          required:
            - maternalId
            - contactType
            - weight
            - proteinInUrine
            - fundalHeight
            - fetalHeartRate
            - hbsag
            - hiv
            - syphilis
    AncThirdContact:
      allOf:
        - $ref: "#/components/schemas/AnteNatalCare"
        - type: object
          required:
            - maternalId
            - contactType
            - weight
            - hbsag
            - hiv
            - syphilis
    AncFourthContact:
      allOf:
        - $ref: "#/components/schemas/AnteNatalCare"
        - type: object
          required:
            - maternalId
            - contactType
            - weight
            - fundalHeight
            - fetalHeartRate
            - hbsag
            - hiv
            - syphilis
            - hemoglobin
    AncFifthContact:
      allOf:
        - $ref: "#/components/schemas/AnteNatalCare"
        - type: object
          required:
            - maternalId
            - contactType
            - weight
            - fundalHeight
            - fetalHeartRate
            - hbsag
            - hiv
            - syphilis
            - hemoglobin
            - usgCheckDate
            - bloodPressure
    AncSixthContact:
      allOf:
        - $ref: "#/components/schemas/AnteNatalCare"
        - type: object
          required:
            - maternalId
            - contactType
            - weight
            - fundalHeight
            - fetalHeartRate
            - hbsag
            - hiv
            - syphilis
            - bloodPressure
    NonContact:
      allOf:
        - $ref: "#/components/schemas/AnteNatalCare"
        - type: object
          required:
            - maternalId
            - contactType
            - weight

    Maternal:
      type: object
      properties:
        menarcheDate:
          type: string
          format: date
          description: Date of first menstruation
        martialDate:
          type: string
          format: date
          description: Date of marriage
        numberOfMarriage:
          type: integer
          format: int32
          description: Number of marriage
        martialStatus:
          type: string
          enum: ["single", "married", "divorced", "widow"]

    NewUserMaternal:
      allOf:
        - $ref: "#/components/schemas/Maternal"
        - $ref: "#/components/schemas/Mother"

  requestBodies:
    PlaceMidwifeRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MidwifePlacement"
          example:
            midwifeId: 1
            jorongId: 1
      description: Place midwife to a Jorong
      required: true
