version: 2.1
jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: cimg/node:18.19.0
        environment:
          PGUSER: postgres
          PGDATABASE: mch_api_test
          PGPASSWORD: password
          ACCESS_TOKEN_KEY: $ACCESS_TOKEN
          REFRESH_TOKEN_KEY: $REFRESH_TOKEN
      - image: circleci/postgres:12.5
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: mch_api_test
          POSTGRES_PASSWORD: password
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - $SSH_FINGERPRINT
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Run migrations
          command: npm run migrate up
      - run:
          name: Run tests
          command: npm run test
      - run:
          name: Copy updated files to VM
          command: scp -o StrictHostKeyChecking=no -r ./* $AZURE_VM_USER@$AZURE_VM_IP:~/mch-api
      - run:
          name: Copy environment file to VM
          command: |
            ssh $AZURE_VM_USER@$AZURE_VM_IP "sudo cp ~/config/.env ~/mch-api/.env"

  deploy:
    machine:
      enabled: true
    steps:
      - run:
          name: Install dependencies
          command: |
            ssh $AZURE_VM_USER@$AZURE_VM_IP "cd mch-api && sudo npm install"
      - run:
          name: Run migrations
          command: |
            ssh $AZURE_VM_USER@$AZURE_VM_IP "cd mch-api && sudo npm run migrate up"
      - run:
          name: Restart server
          command: |
            ssh $AZURE_VM_USER@$AZURE_VM_IP "cd mch-api && pm2 restart all"

workflows:
  version: 2

  build:
    jobs:
      - hold:
          type: approval
          filters:
            branches: { only: [main, /(release|hotfix|v)\/.*/] }
      - build:
          requires:
            - hold
          filters:
            branches: { only: [main, /(release|hotfix|v)\/.*/] }
      - deploy:
          requires:
            - build
          filters:
            branches: { only: [main, /(release|hotfix|v)\/.*/] }
